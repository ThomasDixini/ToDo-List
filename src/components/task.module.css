/* ======================== TASK ======================= */
.task {
    display: grid;
    grid-template-columns: 50px 1fr 50px;
    justify-items: start;

    box-sizing: content-box;
    width: 100%;
    padding: 2rem;
    border: 1px solid var(--gray-300);
    border-radius: 8px;
    
    background-color: var(--gray-400); 
    text-align: left;
}

.task:has(label > .checkInput:checked) {
    border: 0;
    background-color: var(--gray-500);
}

.task p {
    color: var(--gray-100);
}

.task svg {
    cursor: pointer;
    transition: color 0.2s;
}

.task svg:hover {
    color: var(--red);
}
/*==================================================================*/

/* ======================== CHECKBOX ======================= */

.checkboxContainer {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;

    width: 24px;
    height: 24px;
    border-radius: 50%;

    background-color: var(--blue);
    transition: 0.2s all ease;
    cursor: pointer;
}

.checkInput {
    width: 0;
    height: 0;

    opacity: 0;
}

.checkmark {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    border-radius: 50%;
}

.checkmark::before {
    content: "";
    display: flex;
    align-items: center;
    justify-content: center;

    width: 20px;
    height: 20px;
    border-radius: 50%;

    background-color: var(--gray-500);
    transition: 0.4s all ease;
}

.checkInput:checked + .checkmark::before {
    content: "\2713";
    width: 24px;
    height: 24px;

    background-color: var(--purple);
}

label:has(.checkInput:checked) ~ p {
    color: var(--gray-300);
    text-decoration: line-through;
} 
/* =========================================================== */